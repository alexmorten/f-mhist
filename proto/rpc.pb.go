// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/rpc.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Numerical struct {
	Ts                   int64    `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Value                float64  `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Numerical) Reset()         { *m = Numerical{} }
func (m *Numerical) String() string { return proto.CompactTextString(m) }
func (*Numerical) ProtoMessage()    {}
func (*Numerical) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_3d503f41f40e876e, []int{0}
}
func (m *Numerical) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Numerical.Unmarshal(m, b)
}
func (m *Numerical) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Numerical.Marshal(b, m, deterministic)
}
func (dst *Numerical) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Numerical.Merge(dst, src)
}
func (m *Numerical) XXX_Size() int {
	return xxx_messageInfo_Numerical.Size(m)
}
func (m *Numerical) XXX_DiscardUnknown() {
	xxx_messageInfo_Numerical.DiscardUnknown(m)
}

var xxx_messageInfo_Numerical proto.InternalMessageInfo

func (m *Numerical) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *Numerical) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Categorical struct {
	Ts                   int64    `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Categorical) Reset()         { *m = Categorical{} }
func (m *Categorical) String() string { return proto.CompactTextString(m) }
func (*Categorical) ProtoMessage()    {}
func (*Categorical) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_3d503f41f40e876e, []int{1}
}
func (m *Categorical) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Categorical.Unmarshal(m, b)
}
func (m *Categorical) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Categorical.Marshal(b, m, deterministic)
}
func (dst *Categorical) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Categorical.Merge(dst, src)
}
func (m *Categorical) XXX_Size() int {
	return xxx_messageInfo_Categorical.Size(m)
}
func (m *Categorical) XXX_DiscardUnknown() {
	xxx_messageInfo_Categorical.DiscardUnknown(m)
}

var xxx_messageInfo_Categorical proto.InternalMessageInfo

func (m *Categorical) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *Categorical) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Measurement struct {
	// Types that are valid to be assigned to Type:
	//	*Measurement_Numerical
	//	*Measurement_Categorical
	Type                 isMeasurement_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Measurement) Reset()         { *m = Measurement{} }
func (m *Measurement) String() string { return proto.CompactTextString(m) }
func (*Measurement) ProtoMessage()    {}
func (*Measurement) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_3d503f41f40e876e, []int{2}
}
func (m *Measurement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Measurement.Unmarshal(m, b)
}
func (m *Measurement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Measurement.Marshal(b, m, deterministic)
}
func (dst *Measurement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Measurement.Merge(dst, src)
}
func (m *Measurement) XXX_Size() int {
	return xxx_messageInfo_Measurement.Size(m)
}
func (m *Measurement) XXX_DiscardUnknown() {
	xxx_messageInfo_Measurement.DiscardUnknown(m)
}

var xxx_messageInfo_Measurement proto.InternalMessageInfo

type isMeasurement_Type interface {
	isMeasurement_Type()
}

type Measurement_Numerical struct {
	Numerical *Numerical `protobuf:"bytes,1,opt,name=numerical,proto3,oneof"`
}

type Measurement_Categorical struct {
	Categorical *Categorical `protobuf:"bytes,2,opt,name=categorical,proto3,oneof"`
}

func (*Measurement_Numerical) isMeasurement_Type() {}

func (*Measurement_Categorical) isMeasurement_Type() {}

func (m *Measurement) GetType() isMeasurement_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Measurement) GetNumerical() *Numerical {
	if x, ok := m.GetType().(*Measurement_Numerical); ok {
		return x.Numerical
	}
	return nil
}

func (m *Measurement) GetCategorical() *Categorical {
	if x, ok := m.GetType().(*Measurement_Categorical); ok {
		return x.Categorical
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Measurement) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Measurement_OneofMarshaler, _Measurement_OneofUnmarshaler, _Measurement_OneofSizer, []interface{}{
		(*Measurement_Numerical)(nil),
		(*Measurement_Categorical)(nil),
	}
}

func _Measurement_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Measurement)
	// type
	switch x := m.Type.(type) {
	case *Measurement_Numerical:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Numerical); err != nil {
			return err
		}
	case *Measurement_Categorical:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Categorical); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Measurement.Type has unexpected type %T", x)
	}
	return nil
}

func _Measurement_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Measurement)
	switch tag {
	case 1: // type.numerical
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Numerical)
		err := b.DecodeMessage(msg)
		m.Type = &Measurement_Numerical{msg}
		return true, err
	case 2: // type.categorical
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Categorical)
		err := b.DecodeMessage(msg)
		m.Type = &Measurement_Categorical{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Measurement_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Measurement)
	// type
	switch x := m.Type.(type) {
	case *Measurement_Numerical:
		s := proto.Size(x.Numerical)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Measurement_Categorical:
		s := proto.Size(x.Categorical)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type MeasurementMessage struct {
	Name                 string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Measurement          *Measurement `protobuf:"bytes,2,opt,name=measurement,proto3" json:"measurement,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MeasurementMessage) Reset()         { *m = MeasurementMessage{} }
func (m *MeasurementMessage) String() string { return proto.CompactTextString(m) }
func (*MeasurementMessage) ProtoMessage()    {}
func (*MeasurementMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_3d503f41f40e876e, []int{3}
}
func (m *MeasurementMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeasurementMessage.Unmarshal(m, b)
}
func (m *MeasurementMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeasurementMessage.Marshal(b, m, deterministic)
}
func (dst *MeasurementMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeasurementMessage.Merge(dst, src)
}
func (m *MeasurementMessage) XXX_Size() int {
	return xxx_messageInfo_MeasurementMessage.Size(m)
}
func (m *MeasurementMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_MeasurementMessage.DiscardUnknown(m)
}

var xxx_messageInfo_MeasurementMessage proto.InternalMessageInfo

func (m *MeasurementMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MeasurementMessage) GetMeasurement() *Measurement {
	if m != nil {
		return m.Measurement
	}
	return nil
}

type RetrieveRequest struct {
	Start                int64    `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End                  int64    `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	Filter               *Filter  `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetrieveRequest) Reset()         { *m = RetrieveRequest{} }
func (m *RetrieveRequest) String() string { return proto.CompactTextString(m) }
func (*RetrieveRequest) ProtoMessage()    {}
func (*RetrieveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_3d503f41f40e876e, []int{4}
}
func (m *RetrieveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetrieveRequest.Unmarshal(m, b)
}
func (m *RetrieveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetrieveRequest.Marshal(b, m, deterministic)
}
func (dst *RetrieveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetrieveRequest.Merge(dst, src)
}
func (m *RetrieveRequest) XXX_Size() int {
	return xxx_messageInfo_RetrieveRequest.Size(m)
}
func (m *RetrieveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RetrieveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RetrieveRequest proto.InternalMessageInfo

func (m *RetrieveRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *RetrieveRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *RetrieveRequest) GetFilter() *Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

type MeasurementList struct {
	Measurements         []*Measurement `protobuf:"bytes,1,rep,name=measurements,proto3" json:"measurements,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MeasurementList) Reset()         { *m = MeasurementList{} }
func (m *MeasurementList) String() string { return proto.CompactTextString(m) }
func (*MeasurementList) ProtoMessage()    {}
func (*MeasurementList) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_3d503f41f40e876e, []int{5}
}
func (m *MeasurementList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MeasurementList.Unmarshal(m, b)
}
func (m *MeasurementList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MeasurementList.Marshal(b, m, deterministic)
}
func (dst *MeasurementList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MeasurementList.Merge(dst, src)
}
func (m *MeasurementList) XXX_Size() int {
	return xxx_messageInfo_MeasurementList.Size(m)
}
func (m *MeasurementList) XXX_DiscardUnknown() {
	xxx_messageInfo_MeasurementList.DiscardUnknown(m)
}

var xxx_messageInfo_MeasurementList proto.InternalMessageInfo

func (m *MeasurementList) GetMeasurements() []*Measurement {
	if m != nil {
		return m.Measurements
	}
	return nil
}

type RetrieveResponse struct {
	Histories            map[string]*MeasurementList `protobuf:"bytes,1,rep,name=histories,proto3" json:"histories,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *RetrieveResponse) Reset()         { *m = RetrieveResponse{} }
func (m *RetrieveResponse) String() string { return proto.CompactTextString(m) }
func (*RetrieveResponse) ProtoMessage()    {}
func (*RetrieveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_3d503f41f40e876e, []int{6}
}
func (m *RetrieveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetrieveResponse.Unmarshal(m, b)
}
func (m *RetrieveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetrieveResponse.Marshal(b, m, deterministic)
}
func (dst *RetrieveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetrieveResponse.Merge(dst, src)
}
func (m *RetrieveResponse) XXX_Size() int {
	return xxx_messageInfo_RetrieveResponse.Size(m)
}
func (m *RetrieveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RetrieveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RetrieveResponse proto.InternalMessageInfo

func (m *RetrieveResponse) GetHistories() map[string]*MeasurementList {
	if m != nil {
		return m.Histories
	}
	return nil
}

type Filter struct {
	GranularityNanos     int64    `protobuf:"varint,1,opt,name=granularity_nanos,json=granularityNanos,proto3" json:"granularity_nanos,omitempty"`
	Names                []string `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Filter) Reset()         { *m = Filter{} }
func (m *Filter) String() string { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()    {}
func (*Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_3d503f41f40e876e, []int{7}
}
func (m *Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter.Unmarshal(m, b)
}
func (m *Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter.Marshal(b, m, deterministic)
}
func (dst *Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter.Merge(dst, src)
}
func (m *Filter) XXX_Size() int {
	return xxx_messageInfo_Filter.Size(m)
}
func (m *Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_Filter proto.InternalMessageInfo

func (m *Filter) GetGranularityNanos() int64 {
	if m != nil {
		return m.GranularityNanos
	}
	return 0
}

func (m *Filter) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

type Nothing struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nothing) Reset()         { *m = Nothing{} }
func (m *Nothing) String() string { return proto.CompactTextString(m) }
func (*Nothing) ProtoMessage()    {}
func (*Nothing) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_3d503f41f40e876e, []int{8}
}
func (m *Nothing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nothing.Unmarshal(m, b)
}
func (m *Nothing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nothing.Marshal(b, m, deterministic)
}
func (dst *Nothing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nothing.Merge(dst, src)
}
func (m *Nothing) XXX_Size() int {
	return xxx_messageInfo_Nothing.Size(m)
}
func (m *Nothing) XXX_DiscardUnknown() {
	xxx_messageInfo_Nothing.DiscardUnknown(m)
}

var xxx_messageInfo_Nothing proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Numerical)(nil), "proto.Numerical")
	proto.RegisterType((*Categorical)(nil), "proto.Categorical")
	proto.RegisterType((*Measurement)(nil), "proto.Measurement")
	proto.RegisterType((*MeasurementMessage)(nil), "proto.MeasurementMessage")
	proto.RegisterType((*RetrieveRequest)(nil), "proto.RetrieveRequest")
	proto.RegisterType((*MeasurementList)(nil), "proto.MeasurementList")
	proto.RegisterType((*RetrieveResponse)(nil), "proto.RetrieveResponse")
	proto.RegisterMapType((map[string]*MeasurementList)(nil), "proto.RetrieveResponse.HistoriesEntry")
	proto.RegisterType((*Filter)(nil), "proto.Filter")
	proto.RegisterType((*Nothing)(nil), "proto.Nothing")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MhistClient is the client API for Mhist service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MhistClient interface {
	Store(ctx context.Context, in *MeasurementMessage, opts ...grpc.CallOption) (*Nothing, error)
	StoreStream(ctx context.Context, opts ...grpc.CallOption) (Mhist_StoreStreamClient, error)
	Retrieve(ctx context.Context, in *RetrieveRequest, opts ...grpc.CallOption) (*RetrieveResponse, error)
	Subscribe(ctx context.Context, in *Filter, opts ...grpc.CallOption) (Mhist_SubscribeClient, error)
}

type mhistClient struct {
	cc *grpc.ClientConn
}

func NewMhistClient(cc *grpc.ClientConn) MhistClient {
	return &mhistClient{cc}
}

func (c *mhistClient) Store(ctx context.Context, in *MeasurementMessage, opts ...grpc.CallOption) (*Nothing, error) {
	out := new(Nothing)
	err := c.cc.Invoke(ctx, "/proto.Mhist/Store", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mhistClient) StoreStream(ctx context.Context, opts ...grpc.CallOption) (Mhist_StoreStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Mhist_serviceDesc.Streams[0], "/proto.Mhist/StoreStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &mhistStoreStreamClient{stream}
	return x, nil
}

type Mhist_StoreStreamClient interface {
	Send(*MeasurementMessage) error
	CloseAndRecv() (*Nothing, error)
	grpc.ClientStream
}

type mhistStoreStreamClient struct {
	grpc.ClientStream
}

func (x *mhistStoreStreamClient) Send(m *MeasurementMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *mhistStoreStreamClient) CloseAndRecv() (*Nothing, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Nothing)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *mhistClient) Retrieve(ctx context.Context, in *RetrieveRequest, opts ...grpc.CallOption) (*RetrieveResponse, error) {
	out := new(RetrieveResponse)
	err := c.cc.Invoke(ctx, "/proto.Mhist/Retrieve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mhistClient) Subscribe(ctx context.Context, in *Filter, opts ...grpc.CallOption) (Mhist_SubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Mhist_serviceDesc.Streams[1], "/proto.Mhist/Subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &mhistSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Mhist_SubscribeClient interface {
	Recv() (*MeasurementMessage, error)
	grpc.ClientStream
}

type mhistSubscribeClient struct {
	grpc.ClientStream
}

func (x *mhistSubscribeClient) Recv() (*MeasurementMessage, error) {
	m := new(MeasurementMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MhistServer is the server API for Mhist service.
type MhistServer interface {
	Store(context.Context, *MeasurementMessage) (*Nothing, error)
	StoreStream(Mhist_StoreStreamServer) error
	Retrieve(context.Context, *RetrieveRequest) (*RetrieveResponse, error)
	Subscribe(*Filter, Mhist_SubscribeServer) error
}

func RegisterMhistServer(s *grpc.Server, srv MhistServer) {
	s.RegisterService(&_Mhist_serviceDesc, srv)
}

func _Mhist_Store_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MeasurementMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MhistServer).Store(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Mhist/Store",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MhistServer).Store(ctx, req.(*MeasurementMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mhist_StoreStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MhistServer).StoreStream(&mhistStoreStreamServer{stream})
}

type Mhist_StoreStreamServer interface {
	SendAndClose(*Nothing) error
	Recv() (*MeasurementMessage, error)
	grpc.ServerStream
}

type mhistStoreStreamServer struct {
	grpc.ServerStream
}

func (x *mhistStoreStreamServer) SendAndClose(m *Nothing) error {
	return x.ServerStream.SendMsg(m)
}

func (x *mhistStoreStreamServer) Recv() (*MeasurementMessage, error) {
	m := new(MeasurementMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Mhist_Retrieve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MhistServer).Retrieve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Mhist/Retrieve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MhistServer).Retrieve(ctx, req.(*RetrieveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mhist_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Filter)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MhistServer).Subscribe(m, &mhistSubscribeServer{stream})
}

type Mhist_SubscribeServer interface {
	Send(*MeasurementMessage) error
	grpc.ServerStream
}

type mhistSubscribeServer struct {
	grpc.ServerStream
}

func (x *mhistSubscribeServer) Send(m *MeasurementMessage) error {
	return x.ServerStream.SendMsg(m)
}

var _Mhist_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Mhist",
	HandlerType: (*MhistServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Store",
			Handler:    _Mhist_Store_Handler,
		},
		{
			MethodName: "Retrieve",
			Handler:    _Mhist_Retrieve_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StoreStream",
			Handler:       _Mhist_StoreStream_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "Subscribe",
			Handler:       _Mhist_Subscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/rpc.proto",
}

func init() { proto.RegisterFile("proto/rpc.proto", fileDescriptor_rpc_3d503f41f40e876e) }

var fileDescriptor_rpc_3d503f41f40e876e = []byte{
	// 489 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0x4f, 0x8f, 0xd3, 0x3e,
	0x10, 0xdd, 0x24, 0xdb, 0xfe, 0x7e, 0x99, 0x40, 0x5b, 0x46, 0x68, 0x29, 0x3d, 0x55, 0x91, 0x40,
	0x95, 0x40, 0x65, 0xc9, 0xa2, 0x05, 0x2d, 0x37, 0xfe, 0xa9, 0x08, 0xda, 0x83, 0xcb, 0x19, 0x70,
	0xcb, 0xd0, 0x8d, 0x68, 0x9c, 0x62, 0x3b, 0x2b, 0xf5, 0xc4, 0x37, 0xe2, 0x9b, 0xf1, 0x1d, 0x90,
	0x9d, 0x84, 0xb8, 0x5b, 0x55, 0x82, 0x53, 0xc6, 0x99, 0xf7, 0x66, 0x9e, 0x9f, 0x1f, 0x74, 0x37,
	0x32, 0xd7, 0xf9, 0x23, 0xb9, 0x59, 0x8e, 0x6d, 0x85, 0x2d, 0xfb, 0x89, 0x1f, 0x43, 0x38, 0x2b,
	0x32, 0x92, 0xe9, 0x92, 0xaf, 0xb1, 0x03, 0xbe, 0x56, 0x7d, 0x6f, 0xe8, 0x8d, 0x02, 0xe6, 0x6b,
	0x85, 0xb7, 0xa1, 0x75, 0xc5, 0xd7, 0x05, 0xf5, 0xfd, 0xa1, 0x37, 0xf2, 0x58, 0x79, 0x88, 0xcf,
	0x20, 0x7a, 0xc9, 0x35, 0xad, 0xf2, 0xbf, 0x20, 0x85, 0x35, 0xe9, 0x07, 0x44, 0x53, 0xe2, 0xaa,
	0x90, 0x94, 0x91, 0xd0, 0x78, 0x0a, 0xa1, 0xa8, 0xd7, 0x5a, 0x6e, 0x94, 0xf4, 0x4a, 0x61, 0xe3,
	0x3f, 0x72, 0x26, 0x47, 0xac, 0x01, 0xe1, 0x39, 0x44, 0xcb, 0x66, 0xab, 0x1d, 0x1e, 0x25, 0x58,
	0x71, 0x1c, 0x3d, 0x93, 0x23, 0xe6, 0x02, 0x5f, 0xb4, 0xe1, 0x58, 0x6f, 0x37, 0x14, 0x7f, 0x04,
	0x74, 0x04, 0x4c, 0x49, 0x29, 0xbe, 0x22, 0x44, 0x38, 0x16, 0x3c, 0x23, 0x2b, 0x21, 0x64, 0xb6,
	0xc6, 0x27, 0x10, 0x65, 0x0d, 0xf2, 0xda, 0x26, 0x67, 0x06, 0x73, 0x61, 0xf1, 0x67, 0xe8, 0x32,
	0xd2, 0x32, 0xa5, 0x2b, 0x62, 0xf4, 0xbd, 0x20, 0xa5, 0x8d, 0x13, 0x4a, 0x73, 0xa9, 0x2b, 0x73,
	0xca, 0x03, 0xf6, 0x20, 0x20, 0xf1, 0xc5, 0x8e, 0x0d, 0x98, 0x29, 0xf1, 0x1e, 0xb4, 0xbf, 0xa6,
	0x6b, 0x4d, 0xb2, 0x1f, 0xd8, 0x5d, 0x37, 0xab, 0x5d, 0x6f, 0xec, 0x4f, 0x56, 0x35, 0xe3, 0xb7,
	0xd0, 0x75, 0xb6, 0xbf, 0x4f, 0x95, 0xc6, 0x73, 0xb8, 0xe1, 0x68, 0x30, 0xaf, 0x10, 0x1c, 0xd0,
	0xba, 0x83, 0x8b, 0x7f, 0x7a, 0xd0, 0x6b, 0xd4, 0xaa, 0x4d, 0x2e, 0x14, 0xe1, 0x2b, 0x08, 0x2f,
	0x53, 0xa5, 0x73, 0x99, 0x52, 0x3d, 0xe9, 0x7e, 0x35, 0xe9, 0x3a, 0x76, 0x3c, 0xa9, 0x81, 0xaf,
	0x85, 0x96, 0x5b, 0xd6, 0x10, 0x07, 0x1f, 0xa0, 0xb3, 0xdb, 0x34, 0x17, 0xfe, 0x46, 0xdb, 0xca,
	0x62, 0x53, 0xe2, 0x43, 0x37, 0x22, 0x51, 0x72, 0xb2, 0xaf, 0xd7, 0xdc, 0xae, 0x8a, 0xce, 0x85,
	0xff, 0xcc, 0x8b, 0xdf, 0x41, 0xbb, 0x74, 0x03, 0x1f, 0xc0, 0xad, 0x95, 0xe4, 0xa2, 0x58, 0x73,
	0x99, 0xea, 0xed, 0x27, 0xc1, 0x45, 0x5e, 0xa7, 0xaf, 0xe7, 0x34, 0x66, 0xe6, 0xbf, 0x79, 0x01,
	0xf3, 0xa4, 0xaa, 0xef, 0x0f, 0x03, 0x93, 0x45, 0x7b, 0x88, 0x43, 0xf8, 0x6f, 0x96, 0xeb, 0xcb,
	0x54, 0xac, 0x92, 0x5f, 0x1e, 0xb4, 0xa6, 0x46, 0x3c, 0x26, 0xd0, 0x9a, 0xeb, 0x5c, 0x12, 0xde,
	0xdd, 0x57, 0x53, 0xa5, 0x65, 0xd0, 0xa9, 0x23, 0x5a, 0xb2, 0xf1, 0x02, 0x22, 0xcb, 0x99, 0x6b,
	0x49, 0x3c, 0xfb, 0x07, 0xe6, 0xc8, 0xc3, 0xe7, 0xf0, 0x7f, 0xed, 0x2a, 0x9e, 0xec, 0xd9, 0x6c,
	0x03, 0x34, 0xb8, 0x73, 0xc0, 0x7e, 0x7c, 0x0a, 0xe1, 0xbc, 0x58, 0xa8, 0xa5, 0x4c, 0x17, 0x84,
	0xbb, 0x71, 0x19, 0x1c, 0x56, 0x71, 0xea, 0x2d, 0xda, 0xb6, 0x77, 0xf6, 0x3b, 0x00, 0x00, 0xff,
	0xff, 0xa5, 0xcc, 0xca, 0x96, 0x0f, 0x04, 0x00, 0x00,
}
